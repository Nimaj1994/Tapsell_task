version: '3'
services:

  cron:
    build:
      context: cron
      dockerfile: Dockerfile
    image: cron_img:1.0
    container_name: scheduler
    restart: unless-stopped
    env_file:
      - ./tapsell.env
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - webserver
    networks:
      - backend

  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    image: flask-python:3.6
    restart: unless-stopped
    env_file:
      - ./tapsell.env
    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    env_file:
      - ./tapsell.env
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: nginx_img:1.0
    container_name: webserver
    restart: unless-stopped
    env_file:
      - ./tapsell.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local